// Generated by Dagger (https://dagger.dev).
package pub.gll.onepeas.module.cookbook.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import pub.gll.onepeas.module.cookbook.db.CookbookAppDatabase;
import pub.gll.onepeas.module.cookbook.remote.CookbookService;
import pub.gll.onepeas.module.cookbook.repository.CookbookRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CookbookRepositoryModule_ProvideCookbookRepositoryFactory implements Factory<CookbookRepository> {
  private final CookbookRepositoryModule module;

  private final Provider<CookbookService> apiProvider;

  private final Provider<CookbookAppDatabase> appDatabaseProvider;

  public CookbookRepositoryModule_ProvideCookbookRepositoryFactory(CookbookRepositoryModule module,
      Provider<CookbookService> apiProvider, Provider<CookbookAppDatabase> appDatabaseProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public CookbookRepository get() {
    return provideCookbookRepository(module, apiProvider.get(), appDatabaseProvider.get());
  }

  public static CookbookRepositoryModule_ProvideCookbookRepositoryFactory create(
      CookbookRepositoryModule module, Provider<CookbookService> apiProvider,
      Provider<CookbookAppDatabase> appDatabaseProvider) {
    return new CookbookRepositoryModule_ProvideCookbookRepositoryFactory(module, apiProvider, appDatabaseProvider);
  }

  public static CookbookRepository provideCookbookRepository(CookbookRepositoryModule instance,
      CookbookService api, CookbookAppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideCookbookRepository(api, appDatabase));
  }
}
