// Generated by Dagger (https://dagger.dev).
package pub.gll.onepeas.module.car.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import pub.gll.onepeas.module.car.db.AppDatabase;
import pub.gll.onepeas.module.car.remote.CarBrandService;
import pub.gll.onepeas.module.car.repository.Repository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CarRepositoryModule_ProvideCarBrandRepositoryFactory implements Factory<Repository> {
  private final CarRepositoryModule module;

  private final Provider<CarBrandService> apiProvider;

  private final Provider<AppDatabase> appDatabaseProvider;

  public CarRepositoryModule_ProvideCarBrandRepositoryFactory(CarRepositoryModule module,
      Provider<CarBrandService> apiProvider, Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public Repository get() {
    return provideCarBrandRepository(module, apiProvider.get(), appDatabaseProvider.get());
  }

  public static CarRepositoryModule_ProvideCarBrandRepositoryFactory create(
      CarRepositoryModule module, Provider<CarBrandService> apiProvider,
      Provider<AppDatabase> appDatabaseProvider) {
    return new CarRepositoryModule_ProvideCarBrandRepositoryFactory(module, apiProvider, appDatabaseProvider);
  }

  public static Repository provideCarBrandRepository(CarRepositoryModule instance,
      CarBrandService api, AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideCarBrandRepository(api, appDatabase));
  }
}
