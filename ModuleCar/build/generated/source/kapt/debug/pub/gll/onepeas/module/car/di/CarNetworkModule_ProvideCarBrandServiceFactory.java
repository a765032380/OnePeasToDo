// Generated by Dagger (https://dagger.dev).
package pub.gll.onepeas.module.car.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import pub.gll.onepeas.module.car.remote.CarBrandService;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CarNetworkModule_ProvideCarBrandServiceFactory implements Factory<CarBrandService> {
  private final CarNetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public CarNetworkModule_ProvideCarBrandServiceFactory(CarNetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CarBrandService get() {
    return provideCarBrandService(module, retrofitProvider.get());
  }

  public static CarNetworkModule_ProvideCarBrandServiceFactory create(CarNetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new CarNetworkModule_ProvideCarBrandServiceFactory(module, retrofitProvider);
  }

  public static CarBrandService provideCarBrandService(CarNetworkModule instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideCarBrandService(retrofit));
  }
}
