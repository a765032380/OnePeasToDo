// Generated by Dagger (https://dagger.dev).
package pub.gll.modulevideo.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import pub.gll.modulevideo.remote.VideoService;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VideoNetworkModule_ProvideCookbookServiceFactory implements Factory<VideoService> {
  private final VideoNetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public VideoNetworkModule_ProvideCookbookServiceFactory(VideoNetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public VideoService get() {
    return provideCookbookService(module, retrofitProvider.get());
  }

  public static VideoNetworkModule_ProvideCookbookServiceFactory create(VideoNetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new VideoNetworkModule_ProvideCookbookServiceFactory(module, retrofitProvider);
  }

  public static VideoService provideCookbookService(VideoNetworkModule instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideCookbookService(retrofit));
  }
}
