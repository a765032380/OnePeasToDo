apply plugin:  'org.jetbrains.kotlin.android'
apply plugin:  'kotlin-android'
apply plugin:  "kotlin-kapt"//kotlin语言使用注入框架，dataBinding都需要这个
apply plugin:  "com.android.library"//kotlin语言使用注入框架，dataBinding都需要这个
apply plugin:  "dagger.hilt.android.plugin"

android {
    compileSdk rootProject.compile_sdk

    defaultConfig {
        minSdk rootProject.min_sdk
        targetSdk rootProject.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //kotlin ARouter 的配置方式
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
                arg("room.schemaLocation": "$projectDir/schemas".toString())

            }
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //使用jetPack的组件，会要求jdk 1.8最好，有的时候会遇到报错，需要配置如下，避免target jvm 1.8的那个报错
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn",]
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0-rc01'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        compose true
        dataBinding = true
        viewBinding = true
    }
}

dependencies {

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.3'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.0'

    def lifeVersion = '2.4.1'
    implementation 'com.kunminx.archi:unpeek-livedata:4.4.1-beta1'
    implementation "androidx.lifecycle:lifecycle-livedata:$lifeVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifeVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifeVersion"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifeVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeVersion"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //Hilt
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-compiler:2.42"

    def compose_version = "1.1.1"
    implementation "androidx.compose.ui:ui:$compose_version"

    def material3_version = "1.0.0-alpha08"
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"


    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    def compose_ui_version = "1.5.0"
    implementation "androidx.activity:activity-compose:$compose_ui_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"


    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}